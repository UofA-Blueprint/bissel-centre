name: CI/CD Pipeline

# Trigger the workflow on pushes to main and staging, and on pull requests to staging.
on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - staging

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
      NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
      NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
      NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
      NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
      NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
      NEXT_PUBLIC_FIREBASE_VAPID_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_VAPID_KEY }}
    steps:
      # Step 1: Checkout the code from GitHub
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20' 

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: npm install

      # Step 4: Lint the code
      - name: Run Lint
        run: npm run lint

      # Step 5: Run Unit Tests with Jest
      - name: Run Unit Tests
        run: npm run test

      # Step 6: Build the Next.js App (this also verifies build success)
      - name: Build Next.js App
        run: npm run build

      # Step 7: Run End-to-End Tests with Playwright
      - name: Run E2E Tests
        run: npm run test:e2e

  deploy:
    name: Deploy to Vercel
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}         # Vercel API token
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}           # Vercel organization ID
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}   # Vercel project ID
          vercel-args: >
            --prod ${{ github.ref == 'refs/heads/main' && '--prod' || '' }}
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
